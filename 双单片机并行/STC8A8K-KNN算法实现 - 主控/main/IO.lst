C51 COMPILER V9.55   IO                                                                    05/01/2020 23:32:42 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE IO
OBJECT MODULE PLACED IN .\IO.obj
COMPILER INVOKED BY: F:\keil5\C51\BIN\C51.EXE ..\Public\IO.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Public) DEBUG OBJECTEXTE
                    -ND PRINT(.\IO.lst) TABS(2) OBJECT(.\IO.obj)

line level    source

   1          /****************************************Copyright (c)**************************************************
   2          **--------------File Info-------------------------------------------------------------------------------
   3          ** File name:     io.c
   4          ** Created by:      ZuoYouPaPa
   5          ** Last modified Date:  2020-3-10
   6          ** Last Version:    1.0
   7          ** Descriptions:    IO模式控制
   8          ********************************************************************************************************/
   9          #include "io.h"
  10          
  11          /*******************************************************************************************************
  12          函数名称：GPIO_Init
  13          输入参数：GPIO_Choice 端口选择
  14                    *GPIOx初始化结构体的地址
  15          输出参数：无
  16          函数功能：设置端口的工作模式
  17          *******************************************************************************************************/
  18          void GPIO_Init(GPIO_Port GPIO_Choice,GPIO_InitTypeDef *GPIOx)
  19          {
  20   1      
  21   1          if(GPIO_Choice == GPIO_P0)
  22   1          {
  23   2              if(GPIOx->GPIO_Mode == GPIO_Mode_PullUp)    P0M1 &= ~GPIOx->GPIO_Pin, P0M0 &= ~GPIOx->GPIO_Pin;  //U
             -p-drawing alignment bi-directional port|上拉准双向口
  24   2              if(GPIOx->GPIO_Mode == GPIO_Mode_HightZ)    P0M1 |=  GPIOx->GPIO_Pin, P0M0 &= ~GPIOx->GPIO_Pin;  //F
             -loating input|浮空输入
  25   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_OD)    P0M1 |=  GPIOx->GPIO_Pin, P0M0 |=  GPIOx->GPIO_Pin;  //O
             -pen drain output|开漏输出
  26   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_PP)    P0M1 &= ~GPIOx->GPIO_Pin, P0M0 |=  GPIOx->GPIO_Pin;  //p
             -ush-pull|推挽输出
  27   2          }
  28   1          if(GPIO_Choice == GPIO_P1)
  29   1          {
  30   2              if(GPIOx->GPIO_Mode == GPIO_Mode_PullUp)    P1M1 &= ~GPIOx->GPIO_Pin, P1M0 &= ~GPIOx->GPIO_Pin;  //U
             -p-drawing alignment bi-directional port|上拉准双向口
  31   2              if(GPIOx->GPIO_Mode == GPIO_Mode_HightZ)    P1M1 |=  GPIOx->GPIO_Pin, P1M0 &= ~GPIOx->GPIO_Pin;  //F
             -loating input|浮空输入
  32   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_OD)    P1M1 |=  GPIOx->GPIO_Pin, P1M0 |=  GPIOx->GPIO_Pin;  //O
             -pen drain output|开漏输出
  33   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_PP)    P1M1 &= ~GPIOx->GPIO_Pin, P1M0 |=  GPIOx->GPIO_Pin;  //p
             -ush-pull|推挽输出
  34   2          }
  35   1          if(GPIO_Choice == GPIO_P2)
  36   1          {
  37   2              if(GPIOx->GPIO_Mode == GPIO_Mode_PullUp)    P2M1 &= ~GPIOx->GPIO_Pin, P2M0 &= ~GPIOx->GPIO_Pin;  //U
             -p-drawing alignment bi-directional port|上拉准双向口
  38   2              if(GPIOx->GPIO_Mode == GPIO_Mode_HightZ)    P2M1 |=  GPIOx->GPIO_Pin, P2M0 &= ~GPIOx->GPIO_Pin;  //F
             -loating input|浮空输入
  39   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_OD)    P2M1 |=  GPIOx->GPIO_Pin, P2M0 |=  GPIOx->GPIO_Pin;  //O
             -pen drain output|开漏输出
  40   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_PP)    P2M1 &= ~GPIOx->GPIO_Pin, P2M0 |=  GPIOx->GPIO_Pin;  //p
             -ush-pull|推挽输出
  41   2          }
  42   1          if(GPIO_Choice == GPIO_P3)
C51 COMPILER V9.55   IO                                                                    05/01/2020 23:32:42 PAGE 2   

  43   1          {
  44   2              if(GPIOx->GPIO_Mode == GPIO_Mode_PullUp)    P3M1 &= ~GPIOx->GPIO_Pin, P3M0 &= ~GPIOx->GPIO_Pin;  //U
             -p-drawing alignment bi-directional port|上拉准双向口
  45   2              if(GPIOx->GPIO_Mode == GPIO_Mode_HightZ)    P3M1 |=  GPIOx->GPIO_Pin, P3M0 &= ~GPIOx->GPIO_Pin;  //F
             -loating input|浮空输入
  46   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_OD)    P3M1 |=  GPIOx->GPIO_Pin, P3M0 |=  GPIOx->GPIO_Pin;  //O
             -pen drain output|开漏输出
  47   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_PP)    P3M1 &= ~GPIOx->GPIO_Pin, P3M0 |=  GPIOx->GPIO_Pin;  //p
             -ush-pull|推挽输出
  48   2          }
  49   1          if(GPIO_Choice == GPIO_P4)
  50   1          {
  51   2              if(GPIOx->GPIO_Mode == GPIO_Mode_PullUp)    P4M1 &= ~GPIOx->GPIO_Pin, P4M0 &= ~GPIOx->GPIO_Pin;  //U
             -p-drawing alignment bi-directional port|上拉准双向口
  52   2              if(GPIOx->GPIO_Mode == GPIO_Mode_HightZ)    P4M1 |=  GPIOx->GPIO_Pin, P4M0 &= ~GPIOx->GPIO_Pin;  //F
             -loating input|浮空输入
  53   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_OD)    P4M1 |=  GPIOx->GPIO_Pin, P4M0 |=  GPIOx->GPIO_Pin;  //O
             -pen drain output|开漏输出
  54   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_PP)    P4M1 &= ~GPIOx->GPIO_Pin, P4M0 |=  GPIOx->GPIO_Pin;  //p
             -ush-pull|推挽输出
  55   2          }
  56   1          if(GPIO_Choice == GPIO_P5)
  57   1          {
  58   2              if(GPIOx->GPIO_Mode == GPIO_Mode_PullUp)    P5M1 &= ~GPIOx->GPIO_Pin, P5M0 &= ~GPIOx->GPIO_Pin;  //U
             -p-drawing alignment bi-directional port|上拉准双向口
  59   2              if(GPIOx->GPIO_Mode == GPIO_Mode_HightZ)    P5M1 |=  GPIOx->GPIO_Pin, P5M0 &= ~GPIOx->GPIO_Pin;  //F
             -loating input|浮空输入
  60   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_OD)    P5M1 |=  GPIOx->GPIO_Pin, P5M0 |=  GPIOx->GPIO_Pin;  //O
             -pen drain output|开漏输出
  61   2              if(GPIOx->GPIO_Mode == GPIO_Mode_Out_PP)    P5M1 &= ~GPIOx->GPIO_Pin, P5M0 |=  GPIOx->GPIO_Pin;  //p
             -ush-pull|推挽输出
  62   2          }
  63   1      }
  64          
  65          
  66          /*******************************************************************************************************
  67          函数名称：GPIO_ReadInputDataBit
  68          输入参数：GPIO_Choice 端口选择
  69                    *GPIOx初始化结构体的地址
  70          输出参数：无
  71          函数功能：读取单个IO口状态
  72          说    明：读取某个IO口的状态之前需要先使能内部弱上拉电阻
  73          *******************************************************************************************************/
  74          void GPIO_ReadSingIOStatus(uint8 GPIO_Port,uint8 GPIO_Pin)
  75          {
  76   1      
  77   1      }
*** WARNING C280 IN LINE 74 OF ..\Public\IO.c: 'GPIO_Port': unreferenced local variable
*** WARNING C280 IN LINE 74 OF ..\Public\IO.c: 'GPIO_Pin': unreferenced local variable
  78          
  79          /*******************************************************************************************************
  80          函数名称：GPIO_ResetBits
  81          输入参数：GPIO_Port 端口选择  GPIO_Pin引脚选择
  82          输出参数：无
  83          函数功能：置位IO口，无需使用sbit定义一个端口
  84          *******************************************************************************************************/
  85          void GPIO_ResetBits(uint8 GPIO_Port,uint8 GPIO_Pin)
  86          {
  87   1          switch(GPIO_Port)
  88   1          {
  89   2          case GPIO_P0:
  90   2              P0&=~GPIO_Pin;
C51 COMPILER V9.55   IO                                                                    05/01/2020 23:32:42 PAGE 3   

  91   2              break;
  92   2          case GPIO_P1:
  93   2              P1&=~GPIO_Pin;
  94   2              break;
  95   2          case GPIO_P2:
  96   2              P2&=~GPIO_Pin;
  97   2              break;
  98   2          case GPIO_P3:
  99   2              P3&=~GPIO_Pin;
 100   2              break;
 101   2          case GPIO_P4:
 102   2              P4&=~GPIO_Pin;
 103   2              break;
 104   2          case GPIO_P5:
 105   2              P5&=~GPIO_Pin;
 106   2              break;
 107   2          default:
 108   2              break;
 109   2          }
 110   1      
 111   1      }
 112          
 113          /*******************************************************************************************************
 114          函数名称：GPIO_SetBits
 115          输入参数：GPIO_Port 端口选择  GPIO_Pin引脚选择
 116          输出参数：无
 117          函数功能：复位IO口，无需使用sbit定义一个端口
 118          *******************************************************************************************************/
 119          void GPIO_SetBits(uint8 GPIO_Port,uint8 GPIO_Pin)
 120          {
 121   1          switch(GPIO_Port)
 122   1          {
 123   2          case GPIO_P0:
 124   2              P0|=GPIO_Pin;
 125   2              break;
 126   2          case GPIO_P1:
 127   2              P1|=GPIO_Pin;
 128   2              break;
 129   2          case GPIO_P2:
 130   2              P2|=GPIO_Pin;
 131   2              break;
 132   2          case GPIO_P3:
 133   2              P3|=GPIO_Pin;
 134   2              break;
 135   2          case GPIO_P4:
 136   2              P4|=GPIO_Pin;
 137   2              break;
 138   2          case GPIO_P5:
 139   2              P5|=GPIO_Pin;
 140   2              break;
 141   2          default:
 142   2              break;
 143   2          }
 144   1      }
 145          
 146          //串口2引脚初始化
 147          void USART2_Init()
 148          {
 149   1      //    GPIO_InitTypeDef GPIO_InitStructure;
 150   1      //    GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;
 151   1      //    GPIO_InitStructure.GPIO_Pin=GPIO_Pin_All;
 152   1      //    GPIO_Init(GPIO_P2,&GPIO_InitStructure);
C51 COMPILER V9.55   IO                                                                    05/01/2020 23:32:42 PAGE 4   

 153   1          
 154   1          GPIO_InitTypeDef GPIO_InitStructure;
 155   1          GPIO_InitStructure.GPIO_Mode=GPIO_Mode_Out_PP;
 156   1          GPIO_InitStructure.GPIO_Pin=GPIO_Pin_1;
 157   1          GPIO_Init(GPIO_P1,&GPIO_InitStructure);
 158   1      
 159   1      }
 160          /*********************************************************************************************************
 161          **                            End Of File
 162          ********************************************************************************************************/
 163          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    553    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
